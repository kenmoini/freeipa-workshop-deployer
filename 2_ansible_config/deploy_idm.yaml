---
- name: Set up RH Identity Management Server (freeipa-server)
  hosts: idm
  become: True
  gather_facts: True

  tasks:

    - name: Include the base variables
      include_vars: "vars/main.yml"

    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 10
        timeout: 360

    - name: Connect to new instance and set hostname
      hostname:
        name: "{{ freeipa_server_fqdn }}"

    - name: Set /etc/hosts file
      copy:
        dest: "/etc/hosts"
        content: |
          127.0.0.1 localhost localdomain
          {{ hostvars[inventory_hostname].ansible_internal_private_ip }} {{ freeipa_server_fqdn }} {{ freeipa_server_domain }}

    - name: Update base packages
      yum:
        name: "*"
        state: latest
        update_cache: yes
      register: update_task_result
      
    - name: Reboot immediately if there were new packages installed
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: update_task_result is changed

    - name: Wait for the reboot to complete if there were new packages installed
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      when: update_task_result is changed

    - name: Connect to instance and install Pip and base base packages
      become: yes
      yum:
        disable_gpg_check: yes
        state: present
        name: ['python2-pip', 'nano', 'firewalld', 'python3-libselinux', '@idm:DL1']

    - name: Disable SELinux
      selinux:
        state: disabled

#    - name: Enable IDM Yum module
#      shell: yum -y install @idm:DL1

    - name: Start firewalld
      service:
        name: firewalld
        state: started
        enabled: true

    - name: Connect to RH IDM server and set firewall
      firewalld:
        permanent: yes
        immediate: yes
        state: enabled
        service: "{{ item }}"
      with_items:
        - freeipa-ldap
        - freeipa-ldaps
        - dns
        - ntp
        - ssh
        - https
        - http

    - name: Connect to RH IDM server and set firewall for port 8080
      firewalld:
        permanent: yes
        immediate: yes
        state: enabled
        port: 8080/tcp
  
    - name: Install FreeIPA server packages
      yum:
        name: "{{ freeipa_server_pkgs }}"
        state: present
      delay: 10
      register: result
      retries: 3
      until: result is succeeded
  
    - name: Update pip
      pip:
        name: pip
        state: latest
  
    - name: Install FreeIPA server pip dependencies
      pip:
        name: "{{ freeipa_server_pip_pkgs }}"
        state: present
      delay: 10
      register: result
      retries: 3
      until: result is succeeded

    - name: Echo the FreeIPA server installer
      debug:
        msg: "{{ freeipa_server_install_base_command }} {{ freeipa_server_install_options | join(' ') }}"
  
    - name: Run the FreeIPA server installer
      args:
        creates: /etc/ipa/default.conf
      command: "{{ freeipa_server_install_base_command }} {{ freeipa_server_install_options | join(' ') }}"
      #notify: restart ipa services
  
    - name: Do initial kinit admin auth
      shell: "echo '{{ freeipa_server_admin_password }}' | kinit admin"
  
    - name: Create batch student users
      shell: "echo '{{ idm_provision_users_password }}' | ipa user-add {{ idm_provision_users_prefix }}{{ item }}{{ idm_provision_users_suffix }} --first=Student --last=User{{ item }} --password --shell=/bin/bash"
      with_sequence: start={{ idm_provision_users_start }} count={{ idm_provision_users_count }}
      when: idm_provision_users
  
    - name: Set expiration out for a decade so users dont have to reset passwords
      shell: "ipa user-mod {{ idm_provision_users_prefix }}{{ item }}{{ idm_provision_users_suffix }} --setattr krbPasswordExpiration=20260420162000Z"
      with_sequence: start={{ idm_provision_users_start }} count={{ idm_provision_users_count }}
      when: idm_provision_users
  
    - name: Copy Binding User template file over
      template:
        src: templates/idm-binddn.update.j2
        dest: /etc/ipa/idm-binddn.update
      when: idm_provision_users
  
    - name: Create Binding user from template
      shell: "ipa-ldap-updater /etc/ipa/idm-binddn.update"
      when: idm_provision_users
      notify: restart ipa services
  
    - name: Download Lets Encrypt installer
      get_url:
        url: https://dl.eff.org/certbot-auto
        dest: /sbin/certbot
        mode: '0755'
      when: enable_certbot
  
    # From https://www.identrust.com/dst-root-ca-x3
    - name: Copy over DST Root CA X3
      copy:
        src: files/DST-Root-CA-X3.pem
        dest: /opt/DST-Root-CA-X3.pem
      when: enable_certbot
  
    - name: Download LetsEncrypt CA
      get_url:
        url: https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt
        dest: /opt/lets-encrypt-x3-cross-signed.pem
      when: enable_certbot
  
    - name: Integrate DSTRootCAX3 with IPA
      shell: "ipa-cacert-manage -n DSTRootCAX3 -t C,, install /opt/DST-Root-CA-X3.pem"
      when: enable_certbot
  
    - name: Update CA DB
      shell: "ipa-certupdate -v"
      when: enable_certbot
  
    - name: Integrate Lets Encrypt CA Cross Signed Cert
      shell: "ipa-cacert-manage -n letsencryptx3 -t C,, install /opt/lets-encrypt-x3-cross-signed.pem"
      when: enable_certbot
  
    - name: Update CA DB
      shell: "ipa-certupdate -v"
      when: enable_certbot
  
    - name: Clone down FreeIPA Lets Encrypt provisioner - it's just easier this way
      git:
        repo: 'https://github.com/kenmoini/freeipa-letsencrypt'
        dest: /opt/freeipa-letsencrypt
      when: enable_certbot
  
#    - name: Disable extra Apache SSL Listen 443 directive...IDK man, it's all screwy
#      lineinfile:
#        path: /etc/httpd/conf.d/nss.conf
#        regexp: '^Listen 443'
#        line: '#Listen 443'
  
    - name: Run initial LE setup
      shell: "/opt/freeipa-letsencrypt/renew-le.sh --first-time"
      when: enable_certbot

  handlers:
    - name: restart ipa services
      service:
        enabled: yes
        name: ipa
        state: restarted
